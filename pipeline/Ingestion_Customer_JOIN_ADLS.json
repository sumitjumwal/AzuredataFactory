{
	"name": "Ingestion_Customer_JOIN_ADLS",
	"properties": {
		"activities": [
			{
				"name": "Ingestion_Customer_SQLDB_ADLS_copy",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "WITH cte AS (\nselect concat(a.FirstName,a.LastName) as Customer_name , b.AddressID as addressid from saleslt.Customer a \nLEFT join  saleslt.CustomerAddress b\non a.CustomerID = b.CustomerID)\nSELECT cte.Customer_name , \ncase when b.AddressID IS NOT NULL THEN concat(b.AddressLine1,b.AddressLine2)  \nELSE 'Adress not updates' end as Customer_address from cte \nleft join SalesLT.Address b\nON cte.addressid = b.AddressID\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_Generic_DS",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "customer",
							"SchemaName": "SalesLT"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CSV_DS",
						"type": "DatasetReference",
						"parameters": {
							"FilePath": {
								"value": "CSV\\Customerdetail",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-07-02T19:27:10Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}